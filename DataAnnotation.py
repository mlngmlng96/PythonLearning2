data = [
    (70, 4, '░'),
    (78, 1, '█'),
    (57, 1, '░'),
    (35, 6, '░'),
    (33, 1, '█'),
    (67, 5, '█'),
    (3, 4, '░'),
    (53, 0, '█'),
    (29, 0, '█'),
    (51, 0, '█'),
    (65, 2, '█'),
    (78, 4, '█'),
    (33, 3, '█'),
    (34, 2, '█'),
    (50, 0, '█'),
    (41, 5, '░'),
    (49, 6, '█'),
    (70, 1, '█'),
    (35, 5, '░'),
    (19, 6, '█'),
    (65, 1, '░'),
    (64, 1, '█'),
    (70, 3, '░'),
    (46, 2, '█'),
    (16, 0, '█'),
    (39, 4, '░'),
    (6, 0, '█'),
    (13, 6, '█'),
    (35, 0, '░'),
    (28, 6, '█'),
    (34, 5, '█'),
    (79, 3, '█'),
    (38, 5, '█'),
    (52, 0, '█'),
    (18, 3, '█'),
    (10, 6, '░'),
    (63, 0, '█'),
    (75, 6, '█'),
    (22, 6, '█'),
    (69, 3, '█'),
    (87, 2, '█'),
    (26, 0, '█'),
    (60, 4, '█'),
    (79, 4, '█'),
    (55, 4, '█'),
    (0, 2, '█'),
    (73, 6, '█'),
    (47, 0, '█'),
    (82, 0, '█'),
    (8, 0, '█'),
    (69, 4, '█'),
    (62, 1, '█'),
    (64, 0, '░'),
    (9, 1, '█'),
    (1, 2, '█'),
    (78, 5, '█'),
    (28, 1, '█'),
    (72, 0, '░'),
    (4, 1, '░'),
    (29, 5, '░'),
    (42, 0, '█'),
    (65, 4, '█'),
    (87, 5, '█'),
    (3, 0, '█'),
    (59, 5, '█'),
    (3, 5, '█'),
    (23, 0, '░'),
    (0, 3, '█'),
    (71, 2, '█'),
    (39, 5, '█'),
    (69, 2, '█'),
    (35, 4, '░'),
    (11, 5, '░'),
    (28, 4, '█'),
    (47, 1, '█'),
    (45, 1, '█'),
    (56, 3, '█'),
    (27, 6, '█'),
    (10, 0, '░'),
    (40, 6, '█'),
    (80, 4, '░'),
    (46, 3, '█'),
    (47, 3, '░'),
    (61, 6, '░'),
    (15, 2, '░'),
    (0, 4, '█'),
    (8, 6, '█'),
    (49, 0, '█'),
    (55, 2, '█'),
    (78, 2, '█'),
    (27, 1, '█'),
    (88, 5, '░'),
    (75, 4, '░'),
    (5, 6, '█'),
    (70, 0, '█'),
    (9, 5, '█'),
    (64, 2, '█'),
    (28, 2, '█'),
    (14, 1, '█'),
    (17, 6, '█'),
    (74, 3, '░'),
    (40, 5, '█'),
    (61, 3, '█'),
    (36, 2, '█'),
    (79, 0, '█'),
    (40, 1, '█'),
    (61, 2, '█'),
    (16, 3, '█'),
    (68, 2, '█'),
    (79, 5, '█'),
    (86, 0, '░'),
    (63, 2, '░'),
    (30, 0, '█'),
    (43, 6, '░'),
    (37, 3, '░'),
    (3, 1, '█'),
    (89, 3, '░'),
    (27, 5, '█'),
    (9, 0, '█'),
    (45, 3, '█'),
    (16, 5, '█'),
    (87, 6, '█'),
    (2, 3, '█'),
    (14, 2, '█'),
    (80, 2, '░'),
    (33, 3, '█'),
    (34, 6, '█'),
    (88, 4, '░'),
    (80, 1, '░'),
    (38, 2, '█'),
    (39, 1, '█'),
    (42, 1, '█'),
    (34, 6, '█'),
    (19, 3, '█'),
    (19, 0, '█'),
    (46, 4, '█'),
    (67, 3, '░'),
    (48, 0, '█'),
    (13, 4, '█'),
    (15, 1, '░'),
    (35, 3, '█'),
    (80, 0, '█'),
    (72, 1, '█'),
    (15, 0, '█'),
    (46, 1, '█'),
    (79, 6, '█'),
    (4, 5, '░'),
    (55, 0, '░'),
    (11, 1, '░'),
    (27, 0, '█'),
    (57, 5, '░'),
    (36, 4, '█'),
    (80, 1, '░'),
    (35, 2, '░'),
    (3, 2, '░'),
    (66, 3, '█'),
    (47, 6, '█'),
    (14, 4, '█'),
    (79, 2, '█'),
    (38, 4, '█'),
    (15, 5, '░'),
    (7, 6, '█'),
    (89, 2, '░'),
    (85, 6, '█'),
    (21, 6, '█'),
    (73, 1, '░'),
    (7, 0, '█'),
    (2, 3, '░'),
    (13, 0, '█'),
    (14, 0, '█'),
    (83, 6, '█'),
    (69, 5, '░'),
    (59, 6, '█'),
    (1, 4, '█'),
    (51, 6, '█'),
    (78, 3, '█'),
    (73, 2, '░'),
    (66, 5, '█'),
    (21, 3, '░'),
    (62, 2, '█'),
    (30, 6, '█'),
    (65, 3, '█'),
    (21, 0, '█'),
    (15, 4, '░'),
    (3, 6, '█'),
    (60, 3, '█'),
    (29, 6, '█'),
    (60, 6, '█'),
    (68, 3, '█'),
    (41, 6, '█'),
    (88, 2, '█'),
    (53, 6, '█'),
    (5, 0, '█'),
    (68, 5, '█'),
    (79, 1, '█'),
    (48, 6, '█'),
    (85, 0, '█'),
    (45, 5, '█'),
    (28, 0, '█'),
    (37, 4, '█'),
    (45, 2, '█'),
    (1, 5, '█'),
    (38, 2, '█'),
    (15, 3, '█'),
    (4, 6, '█'),
    (13, 2, '█'),
    (57, 3, '░'),
    (28, 3, '█'),
    (33, 4, '█'),
    (81, 6, '█'),
    (15, 6, '█'),
    (14, 5, '█'),
    (57, 2, '░'),
    (54, 6, '█'),
    (27, 2, '█'),
    (83, 0, '█'),
    (52, 6, '█'),
    (2, 1, '█'),
    (61, 4, '█'),
    (71, 0, '█'),
    (55, 1, '█'),
    (74, 6, '█'),
    (33, 5, '█'),
    (74, 5, '█'),
    (84, 0, '█'),
    (67, 4, '█'),
    (22, 0, '█'),
    (4, 0, '█'),
    (88, 3, '█'),
    (75, 5, '░'),
    (18, 0, '█'),
    (55, 6, '░'),
    (29, 4, '░'),
    (74, 4, '█'),
    (2, 5, '█'),
    (14, 3, '█'),
    (73, 4, '█'),
    (34, 1, '█'),
    (72, 4, '█'),
    (48, 5, '░'),
    (41, 0, '█'),
    (25, 0, '█'),
    (26, 6, '█'),
    (84, 6, '█'),
    (63, 1, '█'),
    (71, 1, '█'),
    (78, 6, '█'),
    (82, 4, '█'),
    (62, 1, '░'),
    (87, 2, '█'),
    (47, 6, '░'),
    (31, 2, '░'),
    (39, 2, '░'),
    (66, 2, '░'),
    (48, 1, '░'),
    (10, 5, '█'),
    (62, 0, '█'),
    (1, 1, '█'),
    (47, 5, '█'),
    (29, 3, '░'),
    (56, 4, '█'),
    (25, 6, '█'),
    (89, 4, '░'),
    (9, 6, '█'),
    (17, 3, '█'),
    (34, 0, '█'),
    (13, 3, '█'),
    (61, 5, '█'),
    (56, 2, '█'),
    (29, 2, '░'),
    (63, 3, '░'),
    (41, 1, '░'),
    (20, 6, '█'),
    (78, 0, '█'),
    (36, 3, '█'),
    (73, 5, '█'),
    (56, 1, '█'),
    (86, 5, '█'),
    (81, 0, '█'),
    (72, 3, '█'),
    (2, 4, '█'),
    (86, 1, '█'),
    (10, 1, '█'),
    (34, 6, '█'),
    (76, 6, '░'),
    (50, 6, '█'),
    (37, 2, '█'),
    (88, 4, '█'),
    (60, 5, '█'),
    (20, 0, '█'),
    (17, 0, '█'),
    (55, 5, '█'),
    (31, 0, '░'),
    (28, 5, '█'),
    (47, 4, '░'),
    (13, 5, '█'),
    (46, 5, '█'),
    (18, 6, '█'),
    (61, 1, '█'),
    (20, 3, '█'),
    (68, 4, '█'),
    (33, 2, '█'),
    (13, 1, '█'),
    (62, 5, '░'),
    (73, 3, '█'),
    (54, 1, '█'),
    (43, 0, '░'),
    (86, 6, '░'),
    (54, 1, '█'),
    (62, 3, '█'),
    (70, 2, '█'),
    (57, 4, '░'),
    (56, 5, '░'),
    (87, 4, '█'),
    (27, 4, '█'),
    (40, 0, '█'),
    (27, 3, '█'),
    (33, 0, '█'),
    (14, 6, '█'),
    (66, 4, '█'),
    (55, 3, '█'),
    (72, 2, '█'),
    (29, 1, '░'),
    (80, 6, '█'),
    (35, 1, '░'),
    (1, 3, '█'),
    (23, 6, '░'),
    (69, 1, '█'),
    (6, 6, '█'),
    (45, 4, '█'),
    (80, 5, '░')

]

"""Identify max coordinates to define the grid"""
max_x = max(x for x,y,char in data)
max_y = max(y for x,y,char in data)

"""Define grid"""
grid = [[' ' for _ in range(max_x + 1)] for _ in range(max_y + 1)]


for x, y, char in data:
    grid[y][x] = char

new_grid = reversed(grid)

for row in new_grid:
    print(''.join(row))

